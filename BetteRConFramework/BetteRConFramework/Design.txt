BetteRConFramework employs the basic framework used in the GUI and Layer Standalone. 
It includes the communications with the server, player management, command execution, 
event handling with plugin support, as well as layer components.

The main class is BetteRCon::Server. This surrounds the main connection and its own thread,
which exists to isolate servers from each other. This prevents complete lockup if,
for example, a plugin malfunctions and locks the main server thread. All server
communications use Asio by Chris Kohlhoff, which ensure the highest-possible
single-threaded performance per-server, on each platform which Asio is implemented.

A plugin will inherit from the interface BetteRCon::Plugin, and define the exported factory with
the signature `Plugin_t* _CreatePlugin()`, as well as an exported deleter function with the
signature `void _DeletePlugin(Plugin_t*)`, which will do any necessary cleanup and
free the memory allocated by the factory, using whichever memory pool that was used to create 
it. A plugin will always be created in the disabled state, and if the configuration calls for 
it to be enabled, or it is enabled manually, the member function Enable() is called, which will 
be used to register event listener callbacks per-event. Callbacks follow the signature
`void CallbackName(const PacketInfo&)`, which contains the parameters of the event.

This file will evolve as the design evolves and unfolds